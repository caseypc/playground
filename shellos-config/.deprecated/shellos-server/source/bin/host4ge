#!/usr/bin/perl

use strict;
use warnings;
use utf8;
use vars qw/ %opt /;

$|++;
$SIG{INT} = 'IGNORE';

##
## include
##

use Host4ge::Common;
use Host4ge::Config;

use Encode;
use Getopt::Std;
use IO::Socket;

##
## functions
##

sub usage() {

    my $script = basename($0);

    print STDOUT << "EOF";
Usage: $script
    -h : help
EOF
}

sub proceed {

    # open socket
    my $conf = new Host4ge::Config();
    my $socketfile = $conf->get('socket');
    my $socket = new IO::Socket::UNIX(
        Peer => $socketfile,
        Type => SOCK_STREAM,
        Timeout => 10
    );
    die("Could not connect to the socket: $!\n") unless($socket);
    binmode(STDOUT, ':utf8');
    binmode(STDIN, ':utf8');
    binmode($socket, ':utf8');

    # create connection
    my $args = join(' ', $ENV{PWD}, @ARGV);
    print $socket $args . "\n";
    while(<$socket>) {

        chomp();
        my $response = $_;
=comment
        if($response =~ /^\((INT|PASS)\)\s(.*)$/) {
            print $2;
            my $input;
            if($1 eq 'PASS') {
                system('stty -echo');
                $input = <STDIN>;
                system('stty echo');
                print "\n";
            }
            else {
                $input = <STDIN>;
            }
            print $socket $input;
        }
        else {
=cut
            print $response . "\n";
        #}
    }

    close($socket);
}

##
## main
##

getopts('h', \%opt) or usage();
if($opt{h}) {
    usage();
}
else {
    proceed();
}

exit 0;
