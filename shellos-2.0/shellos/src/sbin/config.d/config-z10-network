#!/bin/bash

# do not modify network settings for non-virtual desktop computers
if [ "$DEVICE" == "desktop" ] && [ $(role_has "virtual") == "no" ]; then
    exit 0
fi


##
## configure network interface (loopback)
##

[ ! -f /etc/network/interfaces.old ] && cp /etc/network/interfaces /etc/network/interfaces.old

# /etc/network/interfaces (loopback network interface)
cat << EOF > /etc/network/interfaces
# loopback network interface
auto lo
iface lo inet loopback
    address 127.0.0.1
    netmask 255.0.0.0
EOF

##
## configure network interface (non bridge)
##

# /etc/network/interfaces (primary network interface - non bridge)
if [ "$USE_BRIDGED_NETWORK" == "N" ] && [ -n "$IP_ADDRESS1" ]; then
cat << EOF >> /etc/network/interfaces

# primary network interface
auto eth0
iface eth0 inet static
    address $IP_ADDRESS1
    netmask $NETMASK
    network $NETWORK
    broadcast $BROADCAST
    gateway $GATEWAY
EOF
[ -n "$(trim "$DNS_NAMESERVERS")" ] && cat << EOF >> /etc/network/interfaces
    dns-nameservers $(trim "$DNS_NAMESERVERS")
EOF
[ -n "$DNS_SEARCH" ] && cat << EOF >> /etc/network/interfaces
    dns-search $DNS_SEARCH
EOF
elif [ -z "$IP_ADDRESS1" ]; then
cat << EOF >> /etc/network/interfaces

# primary network interface
auto eth0
iface eth0 inet dhcp
EOF
fi

# /etc/network/interfaces (secondary network interface)
[ -n "$IP_ADDRESS2" ] && cat << EOF >> /etc/network/interfaces

# secondary network interface
auto eth0:0
iface eth0:0 inet static
    address $IP_ADDRESS2
    netmask $NETMASK
    network $NETWORK
    broadcast $BROADCAST
EOF

# /etc/network/interfaces (tertiary network interface)
[ -n "$IP_ADDRESS3" ] && cat << EOF >> /etc/network/interfaces

# tertiary network interface
auto eth0:1
iface eth0:1 inet static
    address $IP_ADDRESS3
    netmask $NETMASK
    network $NETWORK
    broadcast $BROADCAST
EOF

# /etc/network/interfaces (quaternary network interface)
[ -n "$IP_ADDRESS4" ] && cat << EOF >> /etc/network/interfaces

# quaternary network interface
auto eth0:2
iface eth0:2 inet static
    address $IP_ADDRESS4
    netmask $NETMASK
    network $NETWORK
    broadcast $BROADCAST
EOF

##
## configure network interface (bridge)
##

# /etc/network/interfaces (primary network interface - bridge)
if [ "$USE_BRIDGED_NETWORK" == "Y" ] && [ -n "$IP_ADDRESS1" ]; then
cat << EOF >> /etc/network/interfaces

# primary network interface
auto eth0
iface eth0 inet manual
    #hwaddress ether 00:00:00:00:00:00
    metric 0

# primary bridge
auto br0
iface br0 inet static
    address $IP_ADDRESS1
    netmask $NETMASK
    network $NETWORK
    broadcast $BROADCAST
    gateway $GATEWAY
EOF
[ -n "$(trim "$DNS_NAMESERVERS")" ] && cat << EOF >> /etc/network/interfaces
    dns-nameservers $(trim "$DNS_NAMESERVERS")
EOF
[ -n "$DNS_SEARCH" ] && cat << EOF >> /etc/network/interfaces
    dns-search $DNS_SEARCH
EOF
cat << EOF >> /etc/network/interfaces
    bridge_ports eth0
    bridge_stp off
    bridge_fd 9
    bridge_hello 2
    bridge_maxage 12
    bridge_maxwait 0
    metric 1
EOF
fi

##
## config
##

# remove default libvirt bridge network
[ -f /etc/libvirt/qemu/networks/autostart/default.xml ] && \
    rm /etc/libvirt/qemu/networks/autostart/default.xml

exit 0

