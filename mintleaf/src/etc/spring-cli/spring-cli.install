#!/bin/bash

################################################################################
## variables
##

__var_init=
function _init_variables() {

    if [ "$__var_init" != $result_pos ]; then

        local url="http://repo.spring.io/release/org/springframework/boot/spring-boot-cli"

        www_get $url
        spring_cli_version=$(echo "$_WWW" | grep -oEi '[0-9]+\.[0-9]+\.[0-9]+\.RELEASE' | sort_ver_rev | head -1)
        spring_cli_file="spring-boot-cli-${spring_cli_version}-bin.tar.gz"
        spring_cli_file_size=5000000
        spring_cli_download_url="${url}/${spring_cli_version}/${spring_cli_file}"

        __var_init=$result_pos
    fi
}

################################################################################
## API
##

function is_module_supported() {

    echo $result_pos
}

function install_module() {

    _init_variables

    _download_spring_cli
    _unpack_spring_cli
    _set_file_permissions_spring_cli
    _configure_spring_cli
}

function uninstall_module() {

    rm -rf $spring_cli_path
}

function is_module_installed() {

    if [ -x $spring_cli_path/bin/spring ]; then
        echo $result_pos
    else
        echo $result_neg
    fi
}

function update_module() {

    if [ $(str_compare_ver "$(get_module_latest_version)" "$(get_module_current_version)") -eq 1 ]; then

        _init_variables

        _download_spring_cli
        _unpack_spring_cli
        _set_file_permissions_spring_cli
        _configure_spring_cli

        echo $result_pos
    else
        echo $result_neg
    fi
}

function get_module_current_version() {

    cat $spring_cli_path/version
}

function get_module_latest_version() {

    _init_variables

    echo $spring_cli_version
}

################################################################################
## private routines
##

function _download_spring_cli() {

    local result=$(file_download --url $spring_cli_download_url --file $spring_cli_file --size $spring_cli_file_size)
    if [ $result == $result_neg ]; then
        echo "Error: Unable to download $spring_cli_file file!"
        exit 1
    fi
}

function _unpack_spring_cli() {

    tar -zxf $tmp_dir/$spring_cli_file -C $tmp_dir
    rm -rf $spring_cli_path
    mv $(ls -d -1 $tmp_dir/spring-*/) $spring_cli_path
    echo "$spring_cli_version" > $spring_cli_path/version
}

function _set_file_permissions_spring_cli() {

    chown -R $(id -un):$(id -gn) $spring_cli_path
    chmod +x $spring_cli_path/bin/spring
}

function _configure_spring_cli() {

    if [ "$DIST" == "macosx" ]; then
        mkdir -p $(brew --prefix)/etc/bash_completion.d
        ln -sf $spring_cli_path/shell-completion/bash/spring $(brew --prefix)/etc/bash_completion.d/spring
    else
        ln -sf $spring_cli_path/shell-completion/bash/spring /etc/bash_completion.d/spring
    fi
}
