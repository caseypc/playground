#!/bin/bash

################################################################################
## general routines
##

function jenkins_start() {

   # define help
    local help=$(cat <<HEREDOC

    DESCRIPTION: Start Jenkins application.

    PARAMETERS:
        --wait      wait for the application to start up
HEREDOC
)

    # check parameters
    if [ "$1" == "--help" ]; then
        echo -e "${help}\n"
        return
    fi

    # get parameters
    local wait=$result_neg
    while [ "$1" != "" ]; do
        case $1 in
            --wait) wait=$result_pos
                    ;;
        esac
        shift
    done

    start-stop-daemon --start --quiet \
        --background \
        --make-pidfile \
        --pidfile $jenkins_path/log/jenkins.pid \
        --chuid $jenkins_user \
        --exec $java_default_path/bin/java -- -jar $jenkins_path/bin/jenkins.war --httpListenAddress=0.0.0.0 --httpPort=${jenkins_port} --prefix=/jenkins --logfile=$jenkins_path/log/jenkins.log

    # wait
    if [ $wait == $result_pos ]; then
        while true; do
            printf "."
            sleep 1
            local result=$(wget -T 1 -t 1 -qO- http://127.0.0.1:${jenkins_port}/jenkins | grep -i 'dashboard.*jenkins' | wc -l)
            if [ $result -gt 0 ]; then
                printf "\n"
                break
            fi
        done
    else
        sleep 3
    fi
}

function jenkins_stop() {

   # define help
    local help=$(cat <<HEREDOC

    DESCRIPTION: Stop Jenkins application.

    PARAMETERS:
        --safe      safe stop
HEREDOC
)

    # check parameters
    if [ "$1" == "--help" ]; then
        echo -e "${help}\n"
        return
    fi

    # get parameters
    local safe=$result_neg
    while [ "$1" != "" ]; do
        case $1 in
            --safe) safe=$result_pos
                    ;;
        esac
        shift
    done

    if [ $safe == $result_pos ]; then
        jenkins_cli safe-shutdown
    else
        start-stop-daemon --stop --quiet \
            --pidfile $jenkins_path/log/jenkins.pid
        sleep 3
        # kill it if still running
        if [ $(jenkins_is_running) == $result_pos ]; then
            local pid=$(ps aux | grep -v grep | grep $jenkins_path/bin/jenkins.war | awk '{ print $2 }')
            kill -9 $pid > /dev/null 2>&1
        fi
    fi
}

function jenkins_restart() {

   # define help
    local help=$(cat <<HEREDOC

    DESCRIPTION: Restart Jenkins application.

    PARAMETERS:
        --safe      safe restart
        --wait      wait for the application to restart
HEREDOC
)

    # check parameters
    if [ "$1" == "--help" ]; then
        echo -e "${help}\n"
        return
    fi

    jenkins_stop $*
    sleep 3
    jenkins_start $*
}

function jenkins_is_running() {

   # define help
    local help=$(cat <<HEREDOC

    DESCRIPTION: Check if Jenkins application is running.
HEREDOC
)

    # check parameters
    if [ "$1" == "--help" ]; then
        echo -e "${help}\n"
        return
    fi

    local count=$(ps aux | grep -v grep | grep $jenkins_path/bin/jenkins.war | wc -l)
    if [ $count -gt 0 ]; then
        echo $result_pos
    else
        echo $result_neg
    fi
}

function jenkins_cli() {

   # define help
    local help=$(cat <<HEREDOC

    DESCRIPTION: Jenkins CLI command.
HEREDOC
)

    # check parameters
    if [ "$1" == "--help" ] || [ $# -lt 1 ]; then
        echo -e "${help}\n"
        return
    fi

    java -jar $jenkins_data_path/.jenkins/war/WEB-INF/jenkins-cli.jar \
        -s "http://127.0.0.1:${jenkins_port}/jenkins" \
        $*
}
