#!/bin/bash

################################################################################
## variables
##

export ACTIVEMQ_HOME=$activemq_path

################################################################################
## general routines
##

function activemq_start() {

   # define help
    local help=$(cat <<HEREDOC

    DESCRIPTION: Start ActiveMQ server.

    PARAMETERS:
        --wait      wait for the server to start up
HEREDOC
)

    # check parameters
    if [ "$1" == "--help" ]; then
        echo -e "${help}\n"
        return
    fi

    # get parameters
    local wait=$result_neg
    while [ "$1" != "" ]; do
        case $1 in
            --wait) wait=$result_pos
                    ;;
        esac
        shift
    done

    ACTIVEMQ_OPTS_MEMORY="-Xms128M -Xmx128M" nohup $activemq_path/bin/activemq start > $activemq_path/log/activemq.log 2>&1 &

    # wait
    if [ $wait == $result_pos ]; then
        while true; do
            printf "."
            sleep 1
            local result=$(curl -s -o /dev/null -w "%{http_code}" localhost:8161/admin | grep 401 | wc -l)
            if [ $result -gt 0 ]; then
                printf "\n"
                break
            fi
        done
    else
        sleep 3
    fi
}

function activemq_stop() {

   # define help
    local help=$(cat <<HEREDOC

    DESCRIPTION: Stop ActiveMQ server.
HEREDOC
)

    # check parameters
    if [ "$1" == "--help" ]; then
        echo -e "${help}\n"
        return
    fi

    local pid=$(ps aux | grep -v grep | grep $activemq_path | awk '{ print $2 }')
    kill $pid
    sleep 3

    # kill it if still running
    if [ $(activemq_is_running) == $result_pos ]; then
        local pid=$(ps aux | grep -v grep | grep $activemq_path | awk '{ print $2 }')
        kill -9 $pid > /dev/null 2>&1
    fi
}

function activemq_restart() {

   # define help
    local help=$(cat <<HEREDOC

    DESCRIPTION: Restart ActiveMQ server.

    PARAMETERS:
        --wait      wait for the server to restart
HEREDOC
)

    # check parameters
    if [ "$1" == "--help" ]; then
        echo -e "${help}\n"
        return
    fi

    activemq_stop
    sleep 3
    activemq_start $*
}

function activemq_is_running() {

   # define help
    local help=$(cat <<HEREDOC

    DESCRIPTION: Check if ActiveMQ server is running.
HEREDOC
)

    # check parameters
    if [ "$1" == "--help" ]; then
        echo -e "${help}\n"
        return
    fi

    local count=$(ps aux | grep -v grep | grep $activemq_path | wc -l)
    if [ $count -gt 0 ]; then
        echo $result_pos
    else
        echo $result_neg
    fi
}
